Complete Request:
String jsonpath = System.getProperty("user.dir")+"path of the payload";
String data = CommonMethods.readingfromjsonfile(jsonpath);
String payload = data.replace("RepalceDateToChange","Value");

RestAssured.BaseURI = ".....net"; //Option either we can give here or in ResponseData

Response ResponseData = given()
			.log.info()  --To Print
			.baseUri(".....net")
			.pathParam("WholeURL","Value like /path")
			.queryParam("id","2")
			.queryParam("name","sandeep")
			.auth().Preemptive(Token)    ---Bearer Token Can pass in Auth or Header either in one is fine
			.header("content-Type","application/json")
			.header("Authorization","Bearer "+ Token) ---Bearer Token Can pass in Auth or Header either in one is fine
			.body(payload)
			.When()
			.post("WholeURL")
			.then()
			.log.info() --To Print
			.extract()
			//.JsonPath
			.reponse()

// Validate the response status code
        response.then()
            .assertThat()
            .statusCode(200); // Replace 200 with the expected status code

Response Data = given().baseURL("").extract().response();
int statuscode = Data.getStatusCode();

ResonseData We are coverting String to form Proper JSON Path
		JsonPath js = CommonMethods.rawToJson(ResponseData.asString());

Extract JSON Data
		js.getString("PassJsonKey")


//Convert String to JSON File
    public static JsonPath rawToJson(String response) {

        JsonPath js1 = new JsonPath(response);

        return js1;

    }

Json Object:
{"id" : "2",
"name" : "Sandeep"}

Json Array:
"BookDetails" : ["Eng","Tamil",Social]

Json Scehma:
{"id" : "2",
"name" : "Sandeep",
"BookDetails" : ["Eng","Tamil",Social]}



 

    // Read JSON file to converts string Used for Payload
    public static String readingfromjsonfile(String jsonpath) throws Throwable {

        FileInputStream fin = new FileInputStream(new File(jsonpath));

        InputStreamReader in = new InputStreamReader(fin);

        @SuppressWarnings("resource")

        BufferedReader bufferedReader = new BufferedReader(in);

        StringBuilder sb = new StringBuilder();

        String line;

        while ((line = bufferedReader.readLine()) != null) {

            sb.append(line);

        }

        return sb.toString();

    }

Log a response if any error occured

     log().ifError()

 

To mask Header in the Response Log

    given().conif(config().logConfig(logConfig().blacklistHeader("apikey")))

    Mutliple Header
    Set<String> headers = new HashSet();
    headers.add("x-api-key");
    headers.add("Secreat key");
    RestAssured.given().config(config(logConfig(logConfig().blacklistHeaders(headers))))

 

Pass Multiple headers

    given().header("Multi part", "value", "value1").

 

By using this also extract the response Use the Response Object

    ResponseStatusCode.path("");

    Use the JsonPath Class

    Reponse Time to Validate .time(lessThan(5000l))

 

For PathParam

          given().pathParam("Withdrawn","/ProcessPSAWithDrawnVehicleData");

            Response ResponseStatusCode = given().header("Content-Type", "application/json")

                    .header("Authorization", "Bearer  " + Token).body(payload).post("Withdrawn")

                    .then().statusCode(200).extract().response();

 

For QueryParam
For Header Content-Type "application/json" 

          given().pathParam("Withdrawn","/ProcessPSAWithDrawnVehicleData").queryParam("key","value").queryParam("key1","value2");

            Response ResponseStatusCode = given().header("Content-Type", "application/json")

                    .header("Authorization", "Bearer  " + Token).body(payload).post("Withdrawn")

                    .then().statusCode(200).extract().response();

For Header Content-Type "application/x-www-form-unlencoded"
Body to Pass in this way .formParams("key1","value1","key2","value2","key3","value3");

 

How to download the file, Able to download by using Byte Array

    byte[] downloadedFile = RestAssured.given().when().get().then().extract().asByteArray();

    log.info("Download File Size : " + downloadedFile.length);

 

How to upload media file, Able to upload by using multiPart

    Response resp = RestAssured.given().multiPart("media_url",file,"application/octet=stream").when().post().then().extract().response();

    String url = resp.path("url");

    log.info(url);

 

Set & Get Attribute

    Every Method Should have the ITestContext context as parameterized.

    Set

    extract().jsonpath.get("Token").Context.setAttribute("Bearer",Token)

    Get

    String Token = (String) context.getAttribute("Bearer");

 

Differ of RestAssured.with() & RestAssured.given() Both are same can use either one

 

Nested JSON Object as Payload

    ex: {"worksplace": {"name":"workspace","id":"123"}}

    HaspMap<String, Object> mainObj = new HashMap()<String, Object>;

    HaspMap<String, Object> subObj = new HashMap()<String, Object>;

    subObj.put("name","Test");

    subObj.put("id","123");

    mainObj.put("worksplace",subObj);

 

To fetch Cookies

    Map<String, String> cookies = response.getCookies();

    for(Map.Entry<String, String> entry: cookies.entrySet())

    log.info(entry.getValue());

    log.info(entry.getKey());

 

To Validate XML Response, Content-Type as 'ContentType.xml' following package needs to install io.assured.path.xml.XmlPath

    Sample XML Payload

    //<?xml version= "1.0" ?>

    //<nresponse orderId = "3232"

     Status = "4">

    //</nresponse>

    Validate

    String r =given().accept(ContentType.xml).when.get("/").thenReturn().asString();

    XmlPath x = new XmlPath(r);

    log.info("Order Id: " + x.getString(nresponse.orderId));

 

Handle Timeouts

    given.timeout(5000).when().get(""url)

 

JSON Schema Validation, Have to add the dependencies

    json-schema-validator -version 4.5.0

    To match the JSON Response from local JSON and  Reponse JSON

    given().baseUri("baseURL").log().all().get("endpoint").then().statusCode(200).and().assertThat()

    //.body(matchesJsonSchemaInClasspath("Local Path of the JSON"))


